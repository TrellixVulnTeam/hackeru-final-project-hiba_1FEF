{"ast":null,"code":"import { of, tap } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CustomersService = /*#__PURE__*/(() => {\n  class CustomersService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl;\n      this.customers = [];\n    }\n\n    getCustomers() {\n      if (this.customers.length) {\n        return of(this.customers);\n      }\n\n      return this.http.get(`${this.baseUrl}users`).pipe(tap(customers => this.customers = customers));\n    }\n\n    getCustomer(username) {\n      return this.http.get(`${this.baseUrl}users/${username}`);\n    }\n\n    updateMember(username, customer) {\n      return this.http.put(`${this.baseUrl}users/${username}`, customer).pipe(tap(_ => {\n        const index = this.customers.findIndex(x => x.id === customer.id);\n        this.customers[index] = customer;\n      }));\n    }\n\n    setMainPhoto(photoUrl, username) {\n      return this.http.put(`${this.baseUrl}users/${username}/set-main-photo/${photoUrl}`, {});\n    }\n\n    deletePhoto(photoId, username) {\n      return this.http.delete(`${this.baseUrl}users/${username}/delete-photo/${photoId}`, {});\n    }\n\n  }\n\n  CustomersService.ɵfac = function CustomersService_Factory(t) {\n    return new (t || CustomersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CustomersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomersService,\n    factory: CustomersService.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomersService;\n})();","map":null,"metadata":{},"sourceType":"module"}